service: chameleon-v2

provider:
  name: aws
  runtime: python3.7
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - "arn:aws:s3:::chameleon-photos/*"
        - "arn:aws:s3:::chameleon-photos"
        - "arn:aws:s3:::fmc-private-assets/*"
        - "arn:aws:s3:::fmc-private-assets"

functions:
  cleaner:
    handler: backend/cleaner.handler
    events:
      - schedule: rate(1 day)

  generateUrl:
    handler: backend/generate_url.handler
    events: 
      - http:
          path: generate
          method: get
          cors: true

  create:
    handler: backend/create.create
    timeout: 10
    events:
      - s3:
          bucket: chameleon-photos
          event: s3:ObjectCreated:*
          existing: true

  get:
    handler: backend/get.get
    events:
      - http:
          path: colors/{id}
          method: get
          cors: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST


plugins:
  - serverless-python-requirements
  - serverless-finch

custom:
  client:
    bucketName: chameleon-api
    distributionFolder: frontend
    errorDocument: index.html
  pythonRequirements:
    dockerizePip: non-linux
